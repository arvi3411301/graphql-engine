version: 2
jobs:
  # test build the server binary
  build_test_server:
    docker:
      - image: fpco/stack-build:lts-11.15
      - image: circleci/postgres:10-alpine
        environment:
          POSTGRES_USER: gql_test
          POSTGRES_DB: gql_test
    working_directory: /build/hasura/graphql-engine
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.09.0-ce
          docker_layer_caching: true
      - run:
          name: Setup - Install docker client and other build dependencies
          command: |
            set -ex
            apt-get -y update && apt-get install -y make curl git upx netcat
            VER="17.09.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - restore_cache:
          keys:
          - server-app-cache-{{ .Branch }}-{{ .Revision }}
          - server-deps-cache
      # image should have 'nc' installed
      - run:
          name: waiting for postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1
      - run:
          name: Compile and build and test binary
          working_directory: ./server
          command: |
            make ci-binary
      - save_cache:
          key: server-app-cache-{{ .Branch }}-{{ .Revision }}
          paths:
          - server/.stack-work
      - save_cache:
          key: server-deps-cache
          paths:
          - ~/.stack
      - store_artifacts:
          path: /build/_server_output
          destination: server
      - persist_to_workspace:
          root: /build
          paths:
            - _server_output # binary is called graphql-engine

  # build cli
  build_cli:
    docker:
    - image: hasura/graphql-engine-cli-builder:v0.2
    working_directory: /go/src/github.com/hasura/graphql-engine
    steps:
    - checkout
    - restore_cache:
        keys:
        - cli-vendor-{{ checksum "cli/Gopkg.toml" }}-{{ checksum "cli/Gopkg.lock" }}
    - run:
        name: get cli dependencies
        working_directory: /go/src/github.com/hasura/graphql-engine/cli
        command: make deps
    - save_cache:
        key: cli-vendor-{{ checksum "cli/Gopkg.toml" }}-{{ checksum "cli/Gopkg.lock" }}
        paths:
        - cli/vendor
    - run:
        name: build cli
        working_directory: /go/src/github.com/hasura/graphql-engine/cli
        command: |
          make build
          make compress
          make ci-copy-binary
    - store_artifacts:
        path: /build/_cli_output
        destination: cli
    - persist_to_workspace:
        root: /build
        paths:
          - _cli_output

  # build console - version will be vMAJOR.MINOR for tags and release-v* branches
  build_console:
    docker:
      - image: hasura/graphql-engine-console-builder:v0.2
    working_directory: ~/graphql-engine
    steps:
      - checkout
      - restore_cache:
          key: 
            console-node-modules-{{ checksum "console/package.json" }}
      - run:
          name: install dependencies
          working_directory: ./console
          command: make deps
      - save_cache:
          key: 
            console-node-modules-{{ checksum "console/package.json" }}
          paths:
            - console/node_modules
      - run:
          name: build console
          working_directory: ./console
          command: |
            make build
            make ci-copy-assets
      - store_artifacts:
          path: /build/_console_output
          destination: console
      - persist_to_workspace:
          root: /build
          paths:
            - _console_output # main.{js,css}, vendor.js
  
  # test cli
  test_cli:
    docker:
    - image: hasura/graphql-engine-tester:v0.1
    - image: circleci/postgres:10-alpine
      environment:
        POSTGRES_USER: gql_test
        POSTGRES_DB: gql_test
    working_directory: /go/src/github.com/hasura/graphql-engine
    steps:
    - checkout
    - attach_workspace:
        at: /build
    - restore_cache:
        keys:
        - cli-vendor-{{ checksum "cli/Gopkg.toml" }}-{{ checksum "cli/Gopkg.lock" }}
      # image should have 'nc' installed
    - run:
        name: waiting for postgres to be ready
        command: |
          for i in `seq 1 10`;
          do
            nc -z localhost 5432 && echo Success && exit 0
            echo -n .
            sleep 1
          done
          echo Failed waiting for Postgres && exit 1
    - run:
        name: test cli
        command: .circleci/test-cli.sh

  # test console
  test:
    docker:
    - image: hasura/graphql-engine-tester:v0.1
    - image: circleci/postgres:10-alpine
      environment:
        POSTGRES_USER: gql_test
        POSTGRES_DB: gql_test
    working_directory: ~/graphql-engine
    steps:
    - checkout
    - attach_workspace:
        at: /build
    - restore_cache:
        key: 
          console-node-modules-{{ checksum "console/package.json" }}
    - run:
        name: install dependencies
        working_directory: ./console
        command: make deps
    - save_cache:
        key: 
          console-node-modules-{{ checksum "console/package.json" }}
        paths:
          - console/node_modules
    - run:
        name: waiting for postgres to be ready
        command: |
          for i in `seq 1 10`;
          do
            nc -z localhost 5432 && echo Success && exit 0
            echo -n .
            sleep 1
          done
          echo Failed waiting for Postgres && exit 1
    - run:
        name: test console
        command: .circleci/test-console.sh

workflows:
  version: 2
  build_and_test:
    jobs:
    - build_test_server
    - build_cli
    - build_console
    - test_cli:
        requires:
        - build_test_server
    - test_console:
        requires:
        - build_test_server
        - build_cli