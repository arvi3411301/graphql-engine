version: 2
references:
  # Console references
  console_container_config: &console_container_config
    docker:
      - image: circleci/node:8
    working_directory: ~/graphql-engine

  update_npm: &update_npm
    run:
      name: Update npm
      command: 'sudo npm install -g npm@5'

  npm_cache_key: &npm_cache_key
    console-dependency-cache-{{ checksum "console/package.json" }}

  restore_console_cache: &restore_console_cache
    restore_cache:
      key: *npm_cache_key

  install_console_deps: &install_console_deps
    run:
      name: install console dependencies
      working_directory: ./console
      command: make deps

  console_build: &console_build
    run:
      name: build console
      working_directory: ./console
      command: make build

  persist_assets: &persist_assets
    persist_to_workspace:
      root: console/static
      paths:
        - dist
jobs:
  # build (test) and push server to docker hub
  server:
    docker:
      - image: busybox
    steps:
      - run: echo doing nothing for server job
  # build (test) and push console - version will be vMAJOR.MINOR for tags
  console:
    <<: *console_container_config
    steps:
      - checkout
      - *update_npm
      - *restore_console_cache
      - *install_console_deps
      - save_cache:
          key: npm_cache_key
          paths:
            - ./console/node_modules
      - *console_build
      - *persist_assets
  # build (test) and update vMAJOR.MINOR console assets for release-v* branch updates
  update_console:
    <<: *console_container_config
    steps:
      - checkout
      - *update_npm
      - *restore_console_cache
      - *install_console_deps
      - save_cache:
          key: npm_cache_key
          paths:
            - ./console/node_modules
      - *console_build
      - *persist_assets
  gcloud:
    working_directory: ~/graphql-engine
    docker:
      - image: google/cloud-sdk:latest
    steps:
      - run:
          name: Store Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run: |
          gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          apt-get install make
      - checkout
      - attach_workspace:
          at: ~/graphql-engine/console/static
      - run:
          name: copy assets to gcloud and set Content-Type
          working_directory: ./console
          command: |
            make gcloud-cp-stable
            make gcloud-set-metadata
  # send pull requests to install manifests and heroku repo to update new server image tag
  send_pr:
    docker:
      - image: busybox
    steps:
      - run: echo doing nothing for send_pr job
  # upload cli binaries to github releases page for the tag
  github_release:
    docker:
      - image: busybox
    steps:
      - run: echo doing nothing for github_release job
  # build (test) and upload cli binaries to circleci artifacts
  cli:
    docker:
    - image: hasura/graphql-engine-cli-builder:v0.1
    working_directory: /go/src/github.com/hasura/graphql-engine
    steps:
    - checkout
    - restore_cache:
        keys:
        - cli-vendor-{{ checksum "cli/Gopkg.toml" }}-{{ checksum "cli/Gopkg.lock" }}
        - cli-vendor-
    - run:
        name: get cli dependencies
        working_directory: /go/src/github.com/hasura/graphql-engine/cli
        command: make deps
    - save_cache:
        key: cli-vendor-{{ checksum "cli/Gopkg.toml" }}-{{ checksum "cli/Gopkg.lock" }}
        paths:
        - cli/vendor
    # - run:
    #     name: test cli
    #     command: .circleci/cli-test.sh
    - run:
        name: build cli
        working_directory: /go/src/github.com/hasura/graphql-engine/cli
        command: |
          make build
          make compress
    - store_artifacts:
        path: cli/_output
        destination: cli
workflows:
  version: 2
  # executed for all branches except release-v* and for all tags v*
  # release jobs are only executed for v* tags
  build_and_maybe_release:
    jobs:
      - server: &filter_ignore_release_branches_only_vtags
          filters:
            branches:
              ignore: /^release-v.*/
            tags:
              only:  /^v.*/
      - cli:
          << : *filter_ignore_release_branches_only_vtags
          requires:
            - server
      - console:
          << : *filter_ignore_release_branches_only_vtags
          requires:
            - cli
      - gcloud:
          << : *filter_ignore_release_branches_only_vtags
          requires:
            - console
      - github_release:
          filters: &only_vtags_ignore_branches
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
          requires:
            - gcloud
      - send_pr:
          filters: *only_vtags_ignore_branches
          requires:
            - github_release
  # executed when release-v* branches are updated, to renew console assets
  update_release:
    jobs:
      - update_console: &filter_only_release_branches
          filters:
            branches:
              only: /^release-v.*/
      - gcloud:
          << : *filter_only_release_branches
          requires:
          - update_console
